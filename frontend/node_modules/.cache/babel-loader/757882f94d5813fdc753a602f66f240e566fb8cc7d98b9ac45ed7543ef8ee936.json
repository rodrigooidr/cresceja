{"ast":null,"code":"// src/api/api.js\nimport axios from \"axios\";\nfunction normalizeBase(url) {\n  if (!url) return \"\";\n  // remove barra final para evitar // quando o path começa com /api\n  return url.endsWith(\"/\") ? url.slice(0, -1) : url;\n}\nconst baseURL = normalizeBase(process.env.REACT_APP_API_URL || \"\");\n// Observação:\n// - Se usar CRA proxy no package.json: \"proxy\": \"http://localhost:4000\", mantenha baseURL = \"\".\n// - Se quiser apontar direto para a API: REACT_APP_API_URL=\"http://localhost:4000\".\n\nconst api = axios.create({\n  baseURL,\n  withCredentials: false,\n  // usamos Bearer token, não cookies\n  headers: {\n    Accept: \"application/json\"\n  }\n});\n\n// ---- Token helpers (opcional mas útil) ----\nexport function setAuthToken(token) {\n  if (token) {\n    localStorage.setItem(\"token\", token);\n    api.defaults.headers.common.Authorization = `Bearer ${token}`;\n  } else {\n    delete api.defaults.headers.common.Authorization;\n    localStorage.removeItem(\"token\");\n  }\n}\n\n// Injeta Authorization a cada request com base no localStorage (fallback)\napi.interceptors.request.use(config => {\n  if (!config.headers.Authorization) {\n    const token = localStorage.getItem(\"token\");\n    if (token) config.headers.Authorization = `Bearer ${token}`;\n  }\n  // Conteúdo JSON por padrão quando há body\n  if (config.data && !config.headers[\"Content-Type\"]) {\n    config.headers[\"Content-Type\"] = \"application/json\";\n  }\n  return config;\n});\n\n// Trata 401: limpa sessão (ou redireciona, se preferir)\napi.interceptors.response.use(res => res, err => {\n  var _err$response;\n  if ((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n    // limpa tudo relacionado a auth\n    setAuthToken(null);\n    localStorage.removeItem(\"user\");\n    // se quiser, redirecione:\n    // if (window.location.pathname !== \"/login\") window.location.replace(\"/login\");\n  }\n  return Promise.reject(err);\n});\n\n// Garante header se já havia token ao carregar o app\nconst bootToken = localStorage.getItem(\"token\");\nif (bootToken) setAuthToken(bootToken);\nexport default api;","map":{"version":3,"names":["axios","normalizeBase","url","endsWith","slice","baseURL","process","env","REACT_APP_API_URL","api","create","withCredentials","headers","Accept","setAuthToken","token","localStorage","setItem","defaults","common","Authorization","removeItem","interceptors","request","use","config","getItem","data","response","res","err","_err$response","status","Promise","reject","bootToken"],"sources":["C:/Projetos App/cresceja/frontend/src/api/api.js"],"sourcesContent":["// src/api/api.js\r\nimport axios from \"axios\";\r\n\r\nfunction normalizeBase(url) {\r\n  if (!url) return \"\";\r\n  // remove barra final para evitar // quando o path começa com /api\r\n  return url.endsWith(\"/\") ? url.slice(0, -1) : url;\r\n}\r\n\r\nconst baseURL = normalizeBase(process.env.REACT_APP_API_URL || \"\"); \r\n// Observação:\r\n// - Se usar CRA proxy no package.json: \"proxy\": \"http://localhost:4000\", mantenha baseURL = \"\".\r\n// - Se quiser apontar direto para a API: REACT_APP_API_URL=\"http://localhost:4000\".\r\n\r\nconst api = axios.create({\r\n  baseURL,\r\n  withCredentials: false, // usamos Bearer token, não cookies\r\n  headers: {\r\n    Accept: \"application/json\",\r\n  },\r\n});\r\n\r\n// ---- Token helpers (opcional mas útil) ----\r\nexport function setAuthToken(token) {\r\n  if (token) {\r\n    localStorage.setItem(\"token\", token);\r\n    api.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  } else {\r\n    delete api.defaults.headers.common.Authorization;\r\n    localStorage.removeItem(\"token\");\r\n  }\r\n}\r\n\r\n// Injeta Authorization a cada request com base no localStorage (fallback)\r\napi.interceptors.request.use((config) => {\r\n  if (!config.headers.Authorization) {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  // Conteúdo JSON por padrão quando há body\r\n  if (config.data && !config.headers[\"Content-Type\"]) {\r\n    config.headers[\"Content-Type\"] = \"application/json\";\r\n  }\r\n  return config;\r\n});\r\n\r\n// Trata 401: limpa sessão (ou redireciona, se preferir)\r\napi.interceptors.response.use(\r\n  (res) => res,\r\n  (err) => {\r\n    if (err?.response?.status === 401) {\r\n      // limpa tudo relacionado a auth\r\n      setAuthToken(null);\r\n      localStorage.removeItem(\"user\");\r\n      // se quiser, redirecione:\r\n      // if (window.location.pathname !== \"/login\") window.location.replace(\"/login\");\r\n    }\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\n// Garante header se já havia token ao carregar o app\r\nconst bootToken = localStorage.getItem(\"token\");\r\nif (bootToken) setAuthToken(bootToken);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAaA,CAACC,GAAG,EAAE;EAC1B,IAAI,CAACA,GAAG,EAAE,OAAO,EAAE;EACnB;EACA,OAAOA,GAAG,CAACC,QAAQ,CAAC,GAAG,CAAC,GAAGD,GAAG,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAGF,GAAG;AACnD;AAEA,MAAMG,OAAO,GAAGJ,aAAa,CAACK,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,EAAE,CAAC;AAClE;AACA;AACA;;AAEA,MAAMC,GAAG,GAAGT,KAAK,CAACU,MAAM,CAAC;EACvBL,OAAO;EACPM,eAAe,EAAE,KAAK;EAAE;EACxBC,OAAO,EAAE;IACPC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,SAASC,YAAYA,CAACC,KAAK,EAAE;EAClC,IAAIA,KAAK,EAAE;IACTC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;IACpCN,GAAG,CAACS,QAAQ,CAACN,OAAO,CAACO,MAAM,CAACC,aAAa,GAAG,UAAUL,KAAK,EAAE;EAC/D,CAAC,MAAM;IACL,OAAON,GAAG,CAACS,QAAQ,CAACN,OAAO,CAACO,MAAM,CAACC,aAAa;IAChDJ,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;EAClC;AACF;;AAEA;AACAZ,GAAG,CAACa,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,IAAI,CAACA,MAAM,CAACb,OAAO,CAACQ,aAAa,EAAE;IACjC,MAAML,KAAK,GAAGC,YAAY,CAACU,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIX,KAAK,EAAEU,MAAM,CAACb,OAAO,CAACQ,aAAa,GAAG,UAAUL,KAAK,EAAE;EAC7D;EACA;EACA,IAAIU,MAAM,CAACE,IAAI,IAAI,CAACF,MAAM,CAACb,OAAO,CAAC,cAAc,CAAC,EAAE;IAClDa,MAAM,CAACb,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB;EACrD;EACA,OAAOa,MAAM;AACf,CAAC,CAAC;;AAEF;AACAhB,GAAG,CAACa,YAAY,CAACM,QAAQ,CAACJ,GAAG,CAC1BK,GAAG,IAAKA,GAAG,EACXC,GAAG,IAAK;EAAA,IAAAC,aAAA;EACP,IAAI,CAAAD,GAAG,aAAHA,GAAG,wBAAAC,aAAA,GAAHD,GAAG,CAAEF,QAAQ,cAAAG,aAAA,uBAAbA,aAAA,CAAeC,MAAM,MAAK,GAAG,EAAE;IACjC;IACAlB,YAAY,CAAC,IAAI,CAAC;IAClBE,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;IAC/B;IACA;EACF;EACA,OAAOY,OAAO,CAACC,MAAM,CAACJ,GAAG,CAAC;AAC5B,CACF,CAAC;;AAED;AACA,MAAMK,SAAS,GAAGnB,YAAY,CAACU,OAAO,CAAC,OAAO,CAAC;AAC/C,IAAIS,SAAS,EAAErB,YAAY,CAACqB,SAAS,CAAC;AAEtC,eAAe1B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}