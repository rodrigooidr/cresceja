{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos App\\\\cresceja\\\\frontend\\\\src\\\\components\\\\Inbox\\\\Inbox.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport inboxApi from '../../api/inboxApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChannelBadge({\n  channel\n}) {\n  const map = {\n    whatsapp: {\n      emoji: \"üü¢\",\n      color: \"#25D366\",\n      label: \"WhatsApp\"\n    },\n    instagram: {\n      emoji: \"üü£\",\n      color: \"#C13584\",\n      label: \"Instagram\"\n    },\n    facebook: {\n      emoji: \"üîµ\",\n      color: \"#1877F3\",\n      label: \"Facebook\"\n    }\n  };\n  const c = map[channel] || {\n    emoji: \"‚ùî\",\n    color: \"#666\",\n    label: \"Desconhecido\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    title: c.label,\n    style: {\n      color: c.color\n    },\n    children: c.emoji\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n_c = ChannelBadge;\nexport default function Inbox() {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [filters, setFilters] = useState({\n    name: '',\n    phone: '',\n    category: ''\n  });\n  useEffect(() => {\n    const params = {};\n    if (filters.name) params.name = filters.name;\n    if (filters.phone) params.phone = filters.phone;\n    if (filters.category) params.category_id = filters.category;\n    inboxApi.get('/conversations', {\n      params\n    }).then(res => setConversations(res.data)).catch(() => {});\n  }, [filters]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Inbox Omnichannel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Nome\",\n        className: \"border p-2 rounded\",\n        onChange: e => setFilters(f => ({\n          ...f,\n          name: e.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Telefone\",\n        className: \"border p-2 rounded\",\n        onChange: e => setFilters(f => ({\n          ...f,\n          phone: e.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Categoria (ID)\",\n        className: \"border p-2 rounded\",\n        onChange: e => setFilters(f => ({\n          ...f,\n          category: e.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: conversations.map(conv => {\n        var _conv$Contact, _conv$Contact2, _conv$Category;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"border p-2 my-2 flex items-center gap-2 bg-white rounded shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(ChannelBadge, {\n            channel: conv.channel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: ((_conv$Contact = conv.Contact) === null || _conv$Contact === void 0 ? void 0 : _conv$Contact.name) || '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-gray-500\",\n            children: ((_conv$Contact2 = conv.Contact) === null || _conv$Contact2 === void 0 ? void 0 : _conv$Contact2.phone) || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-xs bg-gray-100 px-2 rounded\",\n            children: ((_conv$Category = conv.Category) === null || _conv$Category === void 0 ? void 0 : _conv$Category.name) || 'Sem Categoria'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, conv.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Inbox, \"0fM9TcEjhmlewP+C1DCkMPBAGgc=\");\n_c2 = Inbox;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChannelBadge\");\n$RefreshReg$(_c2, \"Inbox\");","map":{"version":3,"names":["useEffect","useState","inboxApi","jsxDEV","_jsxDEV","ChannelBadge","channel","map","whatsapp","emoji","color","label","instagram","facebook","c","title","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Inbox","_s","conversations","setConversations","filters","setFilters","name","phone","category","params","category_id","get","then","res","data","catch","className","placeholder","onChange","e","f","target","value","conv","_conv$Contact","_conv$Contact2","_conv$Category","Contact","Category","id","_c2","$RefreshReg$"],"sources":["C:/Projetos App/cresceja/frontend/src/components/Inbox/Inbox.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport inboxApi from '../../api/inboxApi';\n\nfunction ChannelBadge({ channel }) {\n  const map = {\n    whatsapp: { emoji: \"üü¢\", color: \"#25D366\", label: \"WhatsApp\" },\n    instagram: { emoji: \"üü£\", color: \"#C13584\", label: \"Instagram\" },\n    facebook: { emoji: \"üîµ\", color: \"#1877F3\", label: \"Facebook\" },\n  };\n  const c = map[channel] || { emoji: \"‚ùî\", color: \"#666\", label: \"Desconhecido\" };\n  return <span title={c.label} style={{ color: c.color }}>{c.emoji}</span>;\n}\n\nexport default function Inbox() {\n  const [conversations, setConversations] = useState([]);\n  const [filters, setFilters] = useState({ name: '', phone: '', category: '' });\n\n  useEffect(() => {\n    const params = {};\n    if (filters.name) params.name = filters.name;\n    if (filters.phone) params.phone = filters.phone;\n    if (filters.category) params.category_id = filters.category;\n    inboxApi.get('/conversations', { params }).then(res => setConversations(res.data)).catch(()=>{});\n  }, [filters]);\n\n  return (\n    <div className=\"p-6\">\n      <h1 className=\"text-xl font-bold mb-4\">Inbox Omnichannel</h1>\n      <div className=\"flex gap-4 mb-4\">\n        <input placeholder=\"Nome\" className=\"border p-2 rounded\" onChange={e => setFilters(f => ({ ...f, name: e.target.value }))} />\n        <input placeholder=\"Telefone\" className=\"border p-2 rounded\" onChange={e => setFilters(f => ({ ...f, phone: e.target.value }))} />\n        <input placeholder=\"Categoria (ID)\" className=\"border p-2 rounded\" onChange={e => setFilters(f => ({ ...f, category: e.target.value }))} />\n      </div>\n      <ul>\n        {conversations.map(conv => (\n          <li key={conv.id} className=\"border p-2 my-2 flex items-center gap-2 bg-white rounded shadow-sm\">\n            <ChannelBadge channel={conv.channel} />\n            <span className=\"font-semibold\">{conv.Contact?.name || '-'}</span>\n            <span className=\"ml-2 text-gray-500\">{conv.Contact?.phone || ''}</span>\n            <span className=\"ml-2 text-xs bg-gray-100 px-2 rounded\">{conv.Category?.name || 'Sem Categoria'}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,YAAYA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EACjC,MAAMC,GAAG,GAAG;IACVC,QAAQ,EAAE;MAAEC,KAAK,EAAE,IAAI;MAAEC,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAW,CAAC;IAC9DC,SAAS,EAAE;MAAEH,KAAK,EAAE,IAAI;MAAEC,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAY,CAAC;IAChEE,QAAQ,EAAE;MAAEJ,KAAK,EAAE,IAAI;MAAEC,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAW;EAC/D,CAAC;EACD,MAAMG,CAAC,GAAGP,GAAG,CAACD,OAAO,CAAC,IAAI;IAAEG,KAAK,EAAE,GAAG;IAAEC,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAe,CAAC;EAC9E,oBAAOP,OAAA;IAAMW,KAAK,EAAED,CAAC,CAACH,KAAM;IAACK,KAAK,EAAE;MAAEN,KAAK,EAAEI,CAAC,CAACJ;IAAM,CAAE;IAAAO,QAAA,EAAEH,CAAC,CAACL;EAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAC1E;AAACC,EAAA,GARQjB,YAAY;AAUrB,eAAe,SAASkB,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC;IAAE4B,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAE7E/B,SAAS,CAAC,MAAM;IACd,MAAMgC,MAAM,GAAG,CAAC,CAAC;IACjB,IAAIL,OAAO,CAACE,IAAI,EAAEG,MAAM,CAACH,IAAI,GAAGF,OAAO,CAACE,IAAI;IAC5C,IAAIF,OAAO,CAACG,KAAK,EAAEE,MAAM,CAACF,KAAK,GAAGH,OAAO,CAACG,KAAK;IAC/C,IAAIH,OAAO,CAACI,QAAQ,EAAEC,MAAM,CAACC,WAAW,GAAGN,OAAO,CAACI,QAAQ;IAC3D7B,QAAQ,CAACgC,GAAG,CAAC,gBAAgB,EAAE;MAAEF;IAAO,CAAC,CAAC,CAACG,IAAI,CAACC,GAAG,IAAIV,gBAAgB,CAACU,GAAG,CAACC,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAI,CAAC,CAAC,CAAC;EAClG,CAAC,EAAE,CAACX,OAAO,CAAC,CAAC;EAEb,oBACEvB,OAAA;IAAKmC,SAAS,EAAC,KAAK;IAAAtB,QAAA,gBAClBb,OAAA;MAAImC,SAAS,EAAC,wBAAwB;MAAAtB,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7DjB,OAAA;MAAKmC,SAAS,EAAC,iBAAiB;MAAAtB,QAAA,gBAC9Bb,OAAA;QAAOoC,WAAW,EAAC,MAAM;QAACD,SAAS,EAAC,oBAAoB;QAACE,QAAQ,EAAEC,CAAC,IAAId,UAAU,CAACe,CAAC,KAAK;UAAE,GAAGA,CAAC;UAAEd,IAAI,EAAEa,CAAC,CAACE,MAAM,CAACC;QAAM,CAAC,CAAC;MAAE;QAAA3B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7HjB,OAAA;QAAOoC,WAAW,EAAC,UAAU;QAACD,SAAS,EAAC,oBAAoB;QAACE,QAAQ,EAAEC,CAAC,IAAId,UAAU,CAACe,CAAC,KAAK;UAAE,GAAGA,CAAC;UAAEb,KAAK,EAAEY,CAAC,CAACE,MAAM,CAACC;QAAM,CAAC,CAAC;MAAE;QAAA3B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClIjB,OAAA;QAAOoC,WAAW,EAAC,gBAAgB;QAACD,SAAS,EAAC,oBAAoB;QAACE,QAAQ,EAAEC,CAAC,IAAId,UAAU,CAACe,CAAC,KAAK;UAAE,GAAGA,CAAC;UAAEZ,QAAQ,EAAEW,CAAC,CAACE,MAAM,CAACC;QAAM,CAAC,CAAC;MAAE;QAAA3B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxI,CAAC,eACNjB,OAAA;MAAAa,QAAA,EACGQ,aAAa,CAAClB,GAAG,CAACuC,IAAI;QAAA,IAAAC,aAAA,EAAAC,cAAA,EAAAC,cAAA;QAAA,oBACrB7C,OAAA;UAAkBmC,SAAS,EAAC,oEAAoE;UAAAtB,QAAA,gBAC9Fb,OAAA,CAACC,YAAY;YAACC,OAAO,EAAEwC,IAAI,CAACxC;UAAQ;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvCjB,OAAA;YAAMmC,SAAS,EAAC,eAAe;YAAAtB,QAAA,EAAE,EAAA8B,aAAA,GAAAD,IAAI,CAACI,OAAO,cAAAH,aAAA,uBAAZA,aAAA,CAAclB,IAAI,KAAI;UAAG;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAClEjB,OAAA;YAAMmC,SAAS,EAAC,oBAAoB;YAAAtB,QAAA,EAAE,EAAA+B,cAAA,GAAAF,IAAI,CAACI,OAAO,cAAAF,cAAA,uBAAZA,cAAA,CAAclB,KAAK,KAAI;UAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACvEjB,OAAA;YAAMmC,SAAS,EAAC,uCAAuC;YAAAtB,QAAA,EAAE,EAAAgC,cAAA,GAAAH,IAAI,CAACK,QAAQ,cAAAF,cAAA,uBAAbA,cAAA,CAAepB,IAAI,KAAI;UAAe;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GAJhGyB,IAAI,CAACM,EAAE;UAAAlC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKZ,CAAC;MAAA,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACG,EAAA,CAhCuBD,KAAK;AAAA8B,GAAA,GAAL9B,KAAK;AAAA,IAAAD,EAAA,EAAA+B,GAAA;AAAAC,YAAA,CAAAhC,EAAA;AAAAgC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}