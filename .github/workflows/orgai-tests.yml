name: OrgAI Tests

on:
  push:
    branches: [ main, master ]
    paths:
      - "backend/**"
      - "frontend/src/components/ai/**"
      - "frontend/src/pages/settings/OrgAIPage.jsx"
      - "frontend/test/**"
      - "frontend/jest.orgai.cjs"
      - "package.json"
      - "package-lock.json"
      - ".github/workflows/orgai-tests.yml"
  pull_request:
    branches: [ main, master ]
    paths:
      - "backend/**"
      - "frontend/src/components/ai/**"
      - "frontend/src/pages/settings/OrgAIPage.jsx"
      - "frontend/test/**"
      - "frontend/jest.orgai.cjs"
      - "package.json"
      - "package-lock.json"
      - ".github/workflows/orgai-tests.yml"
  workflow_dispatch: {}

concurrency:
  group: orgai-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      CI: true
      # Ajuda o Jest ESM no backend (mesmo que já esteja no script):
      NODE_OPTIONS: --experimental-vm-modules
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20 (with npm cache)
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: |
            package-lock.json
            backend/package-lock.json
            frontend/package-lock.json

      - name: Force GitHub over HTTPS (no SSH)
        run: |
          git config --global url."https://github.com/".insteadOf ssh://git@github.com/
          git config --global url."https://github.com/".insteadOf git@github.com:
          git config --global url."https://".insteadOf git://

      - name: Rewrite git URLs in lockfile (optional hardening)
        run: |
          if [ -f package-lock.json ]; then
            sed -i 's#ssh://git@github.com/#https://github.com/#g' package-lock.json
            sed -i 's#git@github.com:#https://github.com/#g' package-lock.json
            sed -i 's#git://#https://#g' package-lock.json
          fi

      - name: Prepare lockfile (no optional, rewrite SSH→HTTPS)
        run: npm run ci:prepare-lock

      - name: Install deps (omit optional)
        run: npm run ci:install:no-optional

      - name: Prepare reports dir
        run: mkdir -p reports/junit

      - name: Backend tests
        run: npm run test:backend:junit

      - name: Frontend OrgAI tests
        run: npm run test:frontend:orgai:junit

      # --- Optional: Frontend OrgAI coverage ---
      - name: Frontend OrgAI coverage (optional)
        run: npx jest --config frontend/jest.orgai.cjs --coverage --runInBand

      - name: Upload coverage (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/**
          if-no-files-found: ignore

      - name: Upload Jest results (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jest-reports
          path: |
            reports/junit/**/*.xml
            **/jest*.log
            **/junit*.xml
          if-no-files-found: warn
