
import 'dotenv/config';
import express from 'express';
import cors from 'cors';
import helmet from 'helmet';
import rateLimit from 'express-rate-limit';
import morgan from 'morgan';
import * as Sentry from '@sentry/node';
import { router as apiRouter } from './routes/index.js';
import path from 'path';
// segurança e health (copie do server.hardening-snippet.mjs)
import healthRouter from './routes/health.js';
import lgpdRouter from './routes/lgpd.js';
import igRouter from './routes/webhooks/instagram.js';
import fbRouter from './routes/webhooks/messenger.js';
import wtplRouter from './routes/whatsapp_templates.js';

import attachmentsRouter   from './routes/attachments.js';
import leadsImportRouter   from './routes/leads_import.js';
import crmSegmentsRouter   from './routes/crm_segments.js';
import repurposeRouter     from './routes/repurpose.js';
import calGoogleRouter     from './routes/calendar_google.js';
import calOutlookRouter    from './routes/calendar_outlook.js';
import reportsRouter       from './routes/reports.js';


const app = express();

// Sentry
if (process.env.SENTRY_DSN) {
  Sentry.init({ dsn: process.env.SENTRY_DSN });
  app.use(Sentry.Handlers.requestHandler());
}

// Security & utils
app.use(helmet());
app.use(cors({
  origin: process.env.CORS_ORIGIN?.split(',') || ['http://localhost:3000'],
  credentials: true
}));
app.use(express.json({ limit: '10mb' }));
app.use(morgan('combined'));
app.use(rateLimit({ windowMs: 60_000, max: 300 }));
app.use('/', healthRouter);
app.use('/api/lgpd', lgpdRouter);
app.use('/api/webhooks/instagram', igRouter);
app.use('/api/webhooks/messenger', fbRouter);
app.use('/api/whatsapp/templates', wtplRouter);

// Expor a pasta de uploads
app.use('/uploads', express.static(path.join(process.cwd(), 'uploads')));

//Rotas do server
// webhooks IG/Messenger
app.use('/api/webhooks/instagram', require('./routes/webhooks/instagram'));
app.use('/api/webhooks/messenger', require('./routes/webhooks/messenger'));

// anexos + transcrição
app.use('/api/attachments', require('./routes/attachments'));

// leads: import CSV + scoring
app.use('/api/leads', require('./routes/leads_import'));

// CRM: segmentos
app.use('/api/crm', require('./routes/crm_segments'));

// repurpose (fila BullMQ)
app.use('/api/repurpose', require('./routes/repurpose'));

// calendários
app.use('/api/calendar/google', require('./routes/calendar_google'));
app.use('/api/calendar/outlook', require('./routes/calendar_outlook'));

// relatórios
app.use('/api/reports', require('./routes/reports'));

// API
app.use('/api', apiRouter);

// Health
app.get('/healthz', (_,res)=>res.json({ok:true, ts: Date.now()}));

// Sentry error handler
if (process.env.SENTRY_DSN) {
  app.use(Sentry.Handlers.errorHandler());
}

// Default error handler
app.use((err, req, res, next) => {
  console.error('Unhandled error:', err);
  res.status(err.status || 500).json({ error: 'internal_error', message: err.message || 'Unexpected error' });
});

const PORT = process.env.PORT || 4000;
app.listen(PORT, () => {
  console.log(`CresceJá backend listening on :${PORT}`);
});
